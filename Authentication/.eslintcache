[{"E:\\React2\\Authentication\\src\\index.js":"1","E:\\React2\\Authentication\\src\\App.js":"2","E:\\React2\\Authentication\\src\\pages\\AuthPage.js":"3","E:\\React2\\Authentication\\src\\pages\\HomePage.js":"4","E:\\React2\\Authentication\\src\\components\\Layout\\Layout.js":"5","E:\\React2\\Authentication\\src\\components\\Profile\\UserProfile.js":"6","E:\\React2\\Authentication\\src\\components\\Layout\\MainNavigation.js":"7","E:\\React2\\Authentication\\src\\components\\Auth\\AuthForm.js":"8","E:\\React2\\Authentication\\src\\components\\StartingPage\\StartingPageContent.js":"9","E:\\React2\\Authentication\\src\\components\\Profile\\ProfileForm.js":"10","E:\\React2\\Authentication\\src\\context\\AuthContext.jsx":"11"},{"size":346,"mtime":1680760637685,"results":"12","hashOfConfig":"13"},{"size":950,"mtime":1680785169789,"results":"14","hashOfConfig":"13"},{"size":130,"mtime":1620031994000,"results":"15","hashOfConfig":"13"},{"size":171,"mtime":1620031994000,"results":"16","hashOfConfig":"13"},{"size":246,"mtime":1620031994000,"results":"17","hashOfConfig":"13"},{"size":278,"mtime":1620031994000,"results":"18","hashOfConfig":"13"},{"size":770,"mtime":1680784360180,"results":"19","hashOfConfig":"13"},{"size":2540,"mtime":1680784579309,"results":"20","hashOfConfig":"13"},{"size":240,"mtime":1620031994000,"results":"21","hashOfConfig":"13"},{"size":1246,"mtime":1680783683059,"results":"22","hashOfConfig":"13"},{"size":764,"mtime":1680783762594,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5jc0dj",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\React2\\Authentication\\src\\index.js",[],["48","49"],"E:\\React2\\Authentication\\src\\App.js",["50"],"E:\\React2\\Authentication\\src\\pages\\AuthPage.js",[],"E:\\React2\\Authentication\\src\\pages\\HomePage.js",[],"E:\\React2\\Authentication\\src\\components\\Layout\\Layout.js",[],"E:\\React2\\Authentication\\src\\components\\Profile\\UserProfile.js",[],"E:\\React2\\Authentication\\src\\components\\Layout\\MainNavigation.js",[],"E:\\React2\\Authentication\\src\\components\\Auth\\AuthForm.js",["51"],"import { useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classes from './AuthForm.module.css';\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext';\n\nconst AuthForm = () => {\n  const history=useHistory()\n  const { login,isLoggedIn } = AuthContext()\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false)\n  const emailRef = useRef()\n  const passwordRef = useRef()\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  console.log(isLoggedIn);\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    setLoading(true)\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAyqFjwekzckK01VIQTo6f0bFFrPZrmDyI'\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAyqFjwekzckK01VIQTo6f0bFFrPZrmDyI'\n    }\n    try {\n      const res = await axios.post(url, {\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      })\n      login(res.data.idToken)\n      console.log(res.data.idToken);\n      localStorage.setItem('loginInfo',res.data.idToken)\n      alert('Authentication Success')\n      history.replace('/')\n    } catch (error) {\n      alert('Authentication failed..!');\n    }\n    setLoading(false)\n    e.target.reset()\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      \n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' ref={emailRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' ref={passwordRef} required />\n        </div>\n        <div className={classes.actions}>\n          {!loading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {loading && <p>sending request</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","E:\\React2\\Authentication\\src\\components\\StartingPage\\StartingPageContent.js",[],"E:\\React2\\Authentication\\src\\components\\Profile\\ProfileForm.js",[],"E:\\React2\\Authentication\\src\\context\\AuthContext.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":14,"column":6,"nodeType":"58","endLine":14,"endColumn":8,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"57","line":17,"column":5,"nodeType":"58","endLine":17,"endColumn":7,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["63"],["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"65","fix":"67"},"Update the dependencies array to be: [login]",{"range":"68","text":"69"},{"range":"70","text":"69"},[525,527],"[login]",[603,605]]